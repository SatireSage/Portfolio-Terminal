{"version":3,"sources":["components/Terminal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TerminalComponent","isMobile","window","innerWidth","terminalRef","useRef","termRef","webLinksAddon","WebLinksAddon","fitAddon","FitAddon","_useState","useState","_useState2","_slicedToArray","refreshKey","setRefreshKey","DARK_THEME","background","foreground","LIGHT_THEME","_useState3","matchMedia","matches","_useState4","theme","setTheme","useEffect","mediaQuery","handleChange","e","prevKey","addEventListener","removeEventListener","printPrompt","current","write","formatText","text","color","isBold","chosenColor","red","green","yellow","blue","magenta","cyan","white","gray","bold","reset","concat","currentTheme","newBackgroundColor","document","documentElement","style","setProperty","Terminal","cursorBlink","fontSize","fontFamily","loadAddon","open","fit","writeln","Date","getFullYear","cmd","onDataHandler","onData","data","handleCommand","trim","length","slice","onResize","dispose","clear","React","createElement","ref","width","height","display","justifyContent","alignItems","App","showLoader","setShowLoader","showTerminal","setShowTerminal","timer1","setTimeout","timer2","clearTimeout","className","ThreeDots","getComputedStyle","getPropertyValue","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0PAiPeA,eA1OqB,WAChC,IAAMC,EAAW,WAAH,OAAkBC,OAAOC,YAAc,KAU/CC,EAAcC,iBAAuB,MACrCC,EAAUD,iBAAwB,MAClCE,EAAgB,IAAIC,gBACpBC,EAAW,IAAIC,WAAWC,EAEIC,mBAAiB,GAAEC,EAAAC,YAAAH,EAAA,GAAhDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,EAAa,CACfC,WAAY,UACZC,WAAY,WAGVC,EAAc,CAChBF,WAAY,UACZC,WAAY,WAIdE,EACwBT,mBAFfV,OAAOoB,YAAcpB,OAAOoB,WAAW,gCAAgCC,QAAU,OAAS,SAE1CC,EAAAV,YAAAO,EAAA,GAApDI,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,oBAAU,WACN,IAAMC,EAAa1B,OAAOoB,WAAW,gCAE/BO,EAAe,SAACC,GAClBJ,EAASI,EAAEP,QAAU,OAAS,SAC9BP,EAAc,SAAAe,GAAO,OAAIA,EAAU,KAKvC,OAFAH,EAAWI,iBAAiB,SAAUH,GAE/B,WACHD,EAAWK,oBAAoB,SAAUJ,KAE9C,IAEH,IAAMK,EAAc,WACZ5B,EAAQ6B,SACR7B,EAAQ6B,QAAQC,MAAM,QAsBxBC,EAAa,SAACC,EAAcC,EAAeC,GAC7C,IAcMC,EAdiC,CACnCC,IAAK,WACLC,MAAO,WACPC,OAAQ,WACRC,KAAM,WACNC,QAAS,WACTC,KAAM,WACNC,MAAO,WACPC,KAAM,WACNC,KAAM,UACNC,MAAO,WAIgBZ,IAAU,GAErC,SAAAa,OAHaZ,EAAS,UAAY,IAGpBY,OAAGX,GAAWW,OAAGd,EAAI,YAIvCX,oBAAU,WACN,IAAM0B,EAAyB,SAAV5B,EAAmBR,EAAaG,EAC/CkC,EAAqBD,EAAanC,WASxC,GARAqC,SAASC,gBAAgBC,MAAMC,YAAY,qBAAsBJ,GACjEhD,EAAQ6B,QAAU,IAAIwB,WAAS,CAC3BC,aAAa,EACbC,SAAU5D,IAAa,GAAK,GAC5B6D,WAAY,yBACZrC,MAAO4B,IAGPjD,EAAY+B,SAAW7B,EAAQ6B,QAAS,CACxC7B,EAAQ6B,QAAQ4B,UAAUxD,GAC1BD,EAAQ6B,QAAQ4B,UAAUtD,GAC1BH,EAAQ6B,QAAQ6B,KAAK5D,EAAY+B,SACjC1B,EAASwD,MAEJhE,MACDK,EAAQ6B,QAAQ+B,QAAQ,IACxB5D,EAAQ6B,QAAQ+B,QAAQ,qYACxB5D,EAAQ6B,QAAQ+B,QAAQ,maACxB5D,EAAQ6B,QAAQ+B,QAAQ,ubACxB5D,EAAQ6B,QAAQ+B,QAAQ,icACxB5D,EAAQ6B,QAAQ+B,QAAQ,kbACxB5D,EAAQ6B,QAAQ+B,QAAQ,yZACxB5D,EAAQ6B,QAAQ+B,QAAQ,IACxB5D,EAAQ6B,QAAQ+B,QAAQ,6FACxB5D,EAAQ6B,QAAQ+B,QAAQ,KAE5B5D,EAAQ6B,QAAQ+B,QAAO,IAAAd,QAAK,IAAIe,MAAOC,cAAa,uCACpD9D,EAAQ6B,QAAQ+B,QAAQ,2CACxB5D,EAAQ6B,QAAQ+B,QAAO,SAAAd,OAAUf,EAAW,OAAQ,WAAW,GAAK,gCACpEH,IAEA,IAAImC,EAAM,GACJC,EAAgBhE,EAAQ6B,QAAQoC,OAAO,SAACC,GAE7B,OAATA,GACAlE,EAAQ6B,QAAS+B,QAAQ,IACzB5D,EAAQ6B,QAAS+B,QAAQ,IACzBO,EAAcJ,EAAIK,QAClBpE,EAAQ6B,QAAS+B,QAAQ,IACzBG,EAAM,GACNnC,KACgB,SAATsC,EAEHH,EAAIM,OAAS,IACbN,EAAMA,EAAIO,MAAM,GAAI,GACpBtE,EAAQ6B,QAASC,MAAM,WAG3B9B,EAAQ6B,QAASC,MAAMoC,GACvBH,GAAOG,KAITK,EAAW,WACTvE,EAAQ6B,SACR1B,EAASwD,OAQjB,OAHA/D,OAAO8B,iBAAiB,SAAU6C,GAG3B,WACH3E,OAAO+B,oBAAoB,SAAU4C,GACrCP,EAAcQ,UACdxE,EAAQ6B,QAAS2C,aAG1B,CAAC/D,IAEJ,IAAM0D,EAAgB,SAACJ,GACnB,GAAK/D,EAAQ6B,QAAb,CAEA,GAAY,UAARkC,EAKA,OAJA/D,EAAQ6B,QAAQ4C,QAChBzE,EAAQ6B,QAAQgB,QAChB7C,EAAQ6B,QAAQ+B,QAAQ,2CACxB5D,EAAQ6B,QAAQ+B,QAAQ,2CAI5B,OAAQG,GACJ,IAAK,OACD/D,EAAQ6B,QAAQ+B,QAAQ7B,EAAW,sCAAuC,WAAW,IACrF/B,EAAQ6B,QAAQ+B,QAAO,IAAAd,OAAKf,EAAW,SAAU,WAAW,GAAK,WAAAe,OAAUf,EAAW,QAAS,WAAW,GAAK,6BAE/G/B,EAAQ6B,QAAQ+B,QAAO,IAAAd,OAAKf,EAAW,SAAU,WAAW,GAAK,WAAAe,OAAUf,EAAW,UAAW,WAAW,GAAK,qCACjH/B,EAAQ6B,QAAQ+B,QAAO,IAAAd,OAAKf,EAAW,SAAU,WAAW,GAAK,WAAAe,OAAUf,EAAW,QAAS,WAAW,GAAK,4BAC/G/B,EAAQ6B,QAAQ+B,QAAO,IAAAd,OAAKf,EAAW,SAAU,WAAW,GAAK,WAAAe,OAAUf,EAAW,SAAU,WAAW,GAAK,4CAChH,MACJ,IAAK,QACD/B,EAAQ6B,QAAQ+B,QAAQ,0WACxB,MAMJ,IAAK,UACD5D,EAAQ6B,QAAQ+B,QAAQ,gDACxB5D,EAAQ6B,QAAQ+B,QAAQ,uDACxB5D,EAAQ6B,QAAQ+B,QAAQ,2CACxB5D,EAAQ6B,QAAQ+B,QAAQ,+CACxB,MACJ,IAAK,QACDhE,OAAO8D,KAAK,6BACZ1D,EAAQ6B,QAAQ+B,QAAQ,uCACxB,MACJ,IAAK,UACDhE,OAAO8D,KAAK,0BACZ1D,EAAQ6B,QAAQ+B,QAAQ,2CACxB,MACJ,IAAK,SACDhE,OAAO8D,KAAK,iCACZ1D,EAAQ6B,QAAQ+B,QAAQ,iCACxB,MACJ,IAAK,WACDhE,OAAO8D,KAAK,6CACZ1D,EAAQ6B,QAAQ+B,QAAQ,mCACxB,MACJ,IAAK,SAEGxC,EADU,SAAVD,EACS,QAEA,QAEbT,EAAc,SAAAe,GAAO,OAAIA,EAAU,IACnC,MACJ,QACIzB,EAAQ6B,QAAQ+B,QAAO,uBAAAd,OAAwBiB,OAK3D,OACIW,IAAAC,cAAA,OAAKC,IAAK9E,EAAaqD,MAnOL,CAClB0B,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,sBCuBLC,SAjCO,WAAM,IAAA7E,EACUC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA3C8E,EAAU5E,EAAA,GAAE6E,EAAa7E,EAAA,GAAAQ,EACQT,oBAAS,GAAMY,EAAAV,YAAAO,EAAA,GAAhDsE,EAAYnE,EAAA,GAAEoE,EAAepE,EAAA,GAiBpC,OAfAG,oBAAU,WACR,IAAMkE,EAASC,WAAW,WACxBJ,GAAc,IACb,MAEGK,EAASD,WAAW,WACxBF,GAAgB,IACf,MAEH,OAAO,WACLI,aAAaH,GACbG,aAAaD,KAEd,IAGDf,IAAAC,cAAA,OAAKgB,UAAU,OACbjB,IAAAC,cAAA,QAAMgB,UAAU,eACdjB,IAAAC,cAAA,OAAKgB,UAAS,UAAA7C,OAAYqC,EAAa,UAAY,KACjDT,IAAAC,cAACiB,IAAS,CAAC3D,MAAO4D,iBAAiB5C,SAASC,iBAAiB4C,iBAAiB,iBAAkBhB,OAAQ,GAAID,MAAO,MAErHH,IAAAC,cAAA,OAAKgB,UAAS,WAAA7C,OAAauC,EAAe,UAAY,KACpDX,IAAAC,cAACtB,EAAQ,WCjBJ0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAA1E,EAAA,GAAA2E,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpB3D,SAAS4D,eAAe,SAErBC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACO,EAAG,QAORa","file":"static/js/main.9055357a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Terminal } from 'xterm';\nimport { WebLinksAddon } from 'xterm-addon-web-links';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconst TerminalComponent: React.FC = () => {\n    const isMobile = (): boolean => window.innerWidth <= 768;\n\n    const terminalStyle = {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    };\n\n    const terminalRef = useRef<HTMLDivElement>(null);\n    const termRef = useRef<Terminal | null>(null);\n    const webLinksAddon = new WebLinksAddon();\n    const fitAddon = new FitAddon();\n\n    const [refreshKey, setRefreshKey] = useState<number>(0);\n    const DARK_THEME = {\n        background: '#0c1117',\n        foreground: '#fbdb5c',\n    };\n    \n    const LIGHT_THEME = {\n        background: '#fbdb5c',\n        foreground: '#0c1117',\n    };    \n    const getUserPreferredTheme = (): string => {\n        return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    };\n    const [theme, setTheme] = useState(getUserPreferredTheme());\n    \n    useEffect(() => {\n        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n        const handleChange = (e: MediaQueryListEvent) => {\n            setTheme(e.matches ? 'dark' : 'light');\n            setRefreshKey(prevKey => prevKey + 1);\n        };\n    \n        mediaQuery.addEventListener('change', handleChange);\n    \n        return () => {\n            mediaQuery.removeEventListener('change', handleChange);\n        };\n    }, []);\n        \n    const printPrompt = () => {\n        if (termRef.current) {\n            termRef.current.write(' > ');\n        }\n    };\n\n    const colorize = (text: string, color: string): string => {\n        const colors: Record<string, string> = {\n            red: '\\x1b[31m',\n            green: '\\x1b[32m',\n            yellow: '\\x1b[33m',\n            blue: '\\x1b[34m',\n            magenta: '\\x1b[35m',\n            cyan: '\\x1b[36m',\n            white: '\\x1b[37m',\n            gray: '\\x1b[90m',\n            bold: '\\x1b[1m',\n            reset: '\\x1b[0m',\n        };\n    \n        return `${colors[color] || ''}${text}${colors.reset}`;\n    };\n    // usage example: termRef.current.writeln(colorize(\"Welcome to Sahaj's terminal portfolio!\", 'red'));\n\n    const formatText = (text: string, color: string, isBold: boolean): string => {\n        const colors: Record<string, string> = {\n            red: '\\x1b[31m',\n            green: '\\x1b[32m',\n            yellow: '\\x1b[33m',\n            blue: '\\x1b[34m',\n            magenta: '\\x1b[35m',\n            cyan: '\\x1b[36m',\n            white: '\\x1b[37m',\n            gray: '\\x1b[90m',\n            bold: '\\x1b[1m',\n            reset: '\\x1b[0m',\n        };\n\n        const bold = isBold ? '\\x1b[1m' : '';\n        const chosenColor = colors[color] || '';\n        \n        return `${bold}${chosenColor}${text}\\x1b[0m`;\n    };\n    // usage example: termRef.current.writeln(`${formatText(\"Welcome\", \"red\", true)} to Sahaj's terminal portfolio!`);\n\n    useEffect(() => {\n        const currentTheme = theme === 'dark' ? DARK_THEME : LIGHT_THEME;\n        const newBackgroundColor = currentTheme.background;\n        document.documentElement.style.setProperty('--background-color', newBackgroundColor);\n        termRef.current = new Terminal({\n            cursorBlink: true,\n            fontSize: isMobile() ? 12 : 16,\n            fontFamily: 'FontAwesome, monospace',\n            theme: currentTheme,\n        });\n\n        if (terminalRef.current && termRef.current) {\n            termRef.current.loadAddon(webLinksAddon);\n            termRef.current.loadAddon(fitAddon);\n            termRef.current.open(terminalRef.current);\n            fitAddon.fit();\n\n            if (!isMobile()) {\n                termRef.current.writeln('');\n                termRef.current.writeln(\"   ███████╗ █████╗ ██╗  ██╗ █████╗      ██╗    ███████╗██╗███╗   ██╗ ██████╗ ██╗  ██╗\");\n                termRef.current.writeln(\"   ██╔════╝██╔══██╗██║  ██║██╔══██╗     ██║    ██╔════╝██║████╗  ██║██╔════╝ ██║  ██║\");\n                termRef.current.writeln(\"   ███████╗███████║███████║███████║     ██║    ███████╗██║██╔██╗ ██║██║  ███╗███████║\");\n                termRef.current.writeln(\"   ╚════██║██╔══██║██╔══██║██╔══██║██   ██║    ╚════██║██║██║╚██╗██║██║   ██║██╔══██║\");\n                termRef.current.writeln(\"   ███████║██║  ██║██║  ██║██║  ██║╚█████╔╝    ███████║██║██║ ╚████║╚██████╔╝██║  ██║\");\n                termRef.current.writeln(\"   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝     ╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝\");\n                termRef.current.writeln('');\n                termRef.current.writeln(' If ascii art is not displaying properly, please rotate horizontally or widen the window!');\n                termRef.current.writeln('');\n            }\n            termRef.current.writeln(` ${new Date().getFullYear()} Sahaj Singh. All Rights Reserved.`);\n            termRef.current.writeln(\" Welcome to Sahaj's terminal portfolio!\");\n            termRef.current.writeln(` Type ${formatText(\"help\", \"magenta\", true)} to see available commands.`);\n            printPrompt();\n\n            let cmd = '';\n            const onDataHandler = termRef.current.onData((data) => {\n                //if enter is pressed, handle the command\n                if (data === '\\r') {\n                    termRef.current!.writeln('');\n                    termRef.current!.writeln('');\n                    handleCommand(cmd.trim());\n                    termRef.current!.writeln('');\n                    cmd = '';\n                    printPrompt();\n                } else if (data === '\\x7f') { // if backspace is pressed, remove the last character from the command\n                    //only remove the last character if the command is not empty\n                    if (cmd.length > 0) {\n                        cmd = cmd.slice(0, -1);\n                        termRef.current!.write('\\b \\b');\n                    }\n                } else {\n                    termRef.current!.write(data);\n                    cmd += data;\n                }\n            });  \n            \n            const onResize = () => {\n                if (termRef.current) {\n                    fitAddon.fit(); // Resize the terminal to fit the new window dimensions\n                }\n            };\n\n            // Add event listener for window resize\n            window.addEventListener('resize', onResize);\n\n            // Cleanup on unmount\n            return () => {\n                window.removeEventListener('resize', onResize);\n                onDataHandler.dispose();\n                termRef.current!.dispose();\n            };\n        }\n    }, [refreshKey]);\n\n    const handleCommand = (cmd: string) => {\n        if (!termRef.current) return;\n\n        if (cmd === 'clear') {\n            termRef.current.clear();\n            termRef.current.reset();\n            termRef.current.writeln(' Welcome to my terminal portfolio!');\n            termRef.current.writeln(' Type \"help\" to see available commands.');\n            return;\n        }\n\n        switch (cmd) {\n            case 'help':\n                termRef.current.writeln(formatText(\" Available commands are as follows:\", 'magenta', true));\n                termRef.current.writeln(` ${formatText(\"\\uf2b5\", \"magenta\", true)}  Type ${formatText(\"about\", \"magenta\", true)} to learn more about me!`);\n                // termRef.current.writeln(' \\uf07b  Type \"projects\" to view my projects');\n                termRef.current.writeln(` ${formatText(\"\\uf095\", \"magenta\", true)}  Type ${formatText(\"contact\", \"magenta\", true)} to view my contact information.`);\n                termRef.current.writeln(` ${formatText(\"\\uf0e2\", \"magenta\", true)}  Type ${formatText(\"clear\", \"magenta\", true)} to clear the terminal.`);\n                termRef.current.writeln(` ${formatText(\"\\uf186\", \"magenta\", true)}  Type ${formatText(\"toggle\", \"magenta\", true)} to toggle between light and dark mode.`);\n                break;\n            case 'about':\n                termRef.current.writeln(\" I'm a 4th-year Simon Fraser University student pursuing a Computer Engineering degree with a minor in Computing Sciences. Passionate about coding, I specialize in C and Python. I began self-learning programming in middle school and continued to develop my skills through my degree. Check out my GitHub for projects and my journey on sahajs.com 🌐.\");\n                break;\n            // case 'projects':\n            //     termRef.current.writeln(\" \");\n            //     termRef.current.writeln(' 1. Project A: A brief description...');\n            //     termRef.current.writeln(' 2. Project B: Another description...');\n            //     break;\n            case 'contact':\n                termRef.current.writeln(' \\uf1fa Type \"email\" to contact me via Email');\n                termRef.current.writeln(' \\uf0ac Type \"website\" to visit my Personal Website');\n                termRef.current.writeln(' \\uf09b Type \"github\" to view my GitHub');\n                termRef.current.writeln(' \\uf08c Type \"linkedin\" to view my LinkedIn');\n                break;\n            case 'email':\n                window.open(\"mailto:sahaj_singh@sfu.ca\");\n                termRef.current.writeln(' ... Opening \\uf1fa email client...');\n                break;\n            case 'website':\n                window.open(\"https://www.sahajs.com\");\n                termRef.current.writeln(' ... Opening \\uf0ac personal website...');\n                break;\n            case 'github':\n                window.open(\"https://github.com/SatireSage\");\n                termRef.current.writeln(' ... Opening \\uf09b GitHub...');\n                break;\n            case 'linkedin':\n                window.open(\"https://www.linkedin.com/in/sahaj--singh/\");\n                termRef.current.writeln(' ... Opening \\uf08c LinkedIn...');\n                break;\n            case 'toggle':\n                if (theme === 'dark') {\n                    setTheme('light');\n                } else {\n                    setTheme('dark');\n                }\n                setRefreshKey(prevKey => prevKey + 1);\n                break;                \n            default:\n                termRef.current.writeln(` Command not found: ${cmd}`);\n                break;\n        }\n    };\n\n    return (\n        <div ref={terminalRef} style={terminalStyle}></div>\n    );\n};\n\nexport default TerminalComponent;\n","import React, { useState, useEffect } from 'react';\nimport Terminal from './components/Terminal';\nimport { ThreeDots } from 'react-loader-spinner';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [showLoader, setShowLoader] = useState(true);\n  const [showTerminal, setShowTerminal] = useState(false);\n\n  useEffect(() => {\n    const timer1 = setTimeout(() => {\n      setShowLoader(false);\n    }, 1500);  // loader fades out after 2 seconds\n\n    const timer2 = setTimeout(() => {\n      setShowTerminal(true); // terminal fades in a bit after the loader begins fading out\n    }, 1500);  // 500ms after the loader starts its fade-out, start the fade-in for the terminal\n\n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-content\">\n        <div className={`loader ${showLoader ? 'visible' : ''}`}>\n          <ThreeDots color={getComputedStyle(document.documentElement).getPropertyValue('--light-color')} height={80} width={80} />\n        </div>\n        <div className={`fade-in ${showTerminal ? 'visible' : ''}`}>\n          <Terminal />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}