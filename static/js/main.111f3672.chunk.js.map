{"version":3,"sources":["components/Terminal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TerminalComponent","isMobile","window","innerWidth","terminalRef","useRef","termRef","webLinksAddon","WebLinksAddon","fitAddon","FitAddon","_useState","useState","_useState2","_slicedToArray","refreshKey","setRefreshKey","DARK_THEME","background","foreground","LIGHT_THEME","_useState3","matchMedia","matches","_useState4","theme","setTheme","useEffect","mediaQuery","handleChange","e","prevKey","addEventListener","removeEventListener","printPrompt","current","write","currentTheme","newBackgroundColor","document","documentElement","style","setProperty","Terminal","cursorBlink","fontSize","fontFamily","loadAddon","open","fit","writeln","cmd","onDataHandler","onData","data","handleCommand","trim","length","slice","onResize","dispose","clear","reset","concat","React","createElement","ref","width","height","display","justifyContent","alignItems","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"yPA8OeA,eAvOqB,WAChC,IAAMC,EAAW,WAAH,OAAkBC,OAAOC,YAAc,KAU/CC,EAAcC,iBAAuB,MACrCC,EAAUD,iBAAwB,MAClCE,EAAgB,IAAIC,gBACpBC,EAAW,IAAIC,WAAWC,EAEIC,mBAAiB,GAAEC,EAAAC,YAAAH,EAAA,GAAhDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,EAAa,CACfC,WAAY,UACZC,WAAY,WAGVC,EAAc,CAChBF,WAAY,UACZC,WAAY,WAIdE,EACwBT,mBAFfV,OAAOoB,YAAcpB,OAAOoB,WAAW,gCAAgCC,QAAU,OAAS,SAE1CC,EAAAV,YAAAO,EAAA,GAApDI,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,oBAAU,WACN,IAAMC,EAAa1B,OAAOoB,WAAW,gCAE/BO,EAAe,SAACC,GAClBJ,EAASI,EAAEP,QAAU,OAAS,SAC9BP,EAAc,SAAAe,GAAO,OAAIA,EAAU,KAKvC,OAFAH,EAAWI,iBAAiB,SAAUH,GAE/B,WACHD,EAAWK,oBAAoB,SAAUJ,KAE9C,IAEH,IAAMK,EAAc,WACZ5B,EAAQ6B,SACR7B,EAAQ6B,QAAQC,MAAM,QA2C9BT,oBAAU,WACN,IAAMU,EAAyB,SAAVZ,EAAmBR,EAAaG,EAC/CkB,EAAqBD,EAAanB,WASxC,GARAqB,SAASC,gBAAgBC,MAAMC,YAAY,qBAAsBJ,GACjEhC,EAAQ6B,QAAU,IAAIQ,WAAS,CAC3BC,aAAa,EACbC,SAAU5C,IAAa,GAAK,GAC5B6C,WAAY,yBACZrB,MAAOY,IAGPjC,EAAY+B,SAAW7B,EAAQ6B,QAAS,CACxC7B,EAAQ6B,QAAQY,UAAUxC,GAC1BD,EAAQ6B,QAAQY,UAAUtC,GAC1BH,EAAQ6B,QAAQa,KAAK5C,EAAY+B,SACjC1B,EAASwC,MAEJhD,MACDK,EAAQ6B,QAAQe,QAAQ,IACxB5C,EAAQ6B,QAAQe,QAAQ,qYACxB5C,EAAQ6B,QAAQe,QAAQ,maACxB5C,EAAQ6B,QAAQe,QAAQ,ubACxB5C,EAAQ6B,QAAQe,QAAQ,icACxB5C,EAAQ6B,QAAQe,QAAQ,kbACxB5C,EAAQ6B,QAAQe,QAAQ,yZACxB5C,EAAQ6B,QAAQe,QAAQ,IACxB5C,EAAQ6B,QAAQe,QAAQ,6FACxB5C,EAAQ6B,QAAQe,QAAQ,KAE5B5C,EAAQ6B,QAAQe,QAAQ,2CACxB5C,EAAQ6B,QAAQe,QAAQ,2CACxBhB,IAEA,IAAIiB,EAAM,GACJC,EAAgB9C,EAAQ6B,QAAQkB,OAAO,SAACC,GAE7B,OAATA,GACAhD,EAAQ6B,QAASe,QAAQ,IACzBK,EAAcJ,EAAIK,QAClBL,EAAM,GACNjB,KACgB,SAAToB,EAEHH,EAAIM,OAAS,IACbN,EAAMA,EAAIO,MAAM,GAAI,GACpBpD,EAAQ6B,QAASC,MAAM,WAG3B9B,EAAQ6B,QAASC,MAAMkB,GACvBH,GAAOG,KAITK,EAAW,WACTrD,EAAQ6B,SACR1B,EAASwC,OAQjB,OAHA/C,OAAO8B,iBAAiB,SAAU2B,GAG3B,WACHzD,OAAO+B,oBAAoB,SAAU0B,GACrCP,EAAcQ,UACdtD,EAAQ6B,QAASyB,aAG1B,CAAC7C,IAEJ,IAAMwC,EAAgB,SAACJ,GACnB,GAAK7C,EAAQ6B,QAAb,CAEA,GAAY,UAARgB,EAKA,OAJA7C,EAAQ6B,QAAQ0B,QAChBvD,EAAQ6B,QAAQ2B,QAChBxD,EAAQ6B,QAAQe,QAAQ,2CACxB5C,EAAQ6B,QAAQe,QAAQ,2CAI5B,OAAQC,GACJ,IAAK,OACD7C,EAAQ6B,QAAQe,QAAQ,uCACxB5C,EAAQ6B,QAAQe,QAAQ,gDACxB5C,EAAQ6B,QAAQe,QAAQ,gDACxB5C,EAAQ6B,QAAQe,QAAQ,0DACxB5C,EAAQ6B,QAAQe,QAAQ,+CACxB5C,EAAQ6B,QAAQe,QAAQ,gEACxB,MACJ,IAAK,QACD5C,EAAQ6B,QAAQe,QAAQ,0WACxB,MACJ,IAAK,WACD5C,EAAQ6B,QAAQe,QAAQ,yCACxB5C,EAAQ6B,QAAQe,QAAQ,yCAExB,MACJ,IAAK,UACD5C,EAAQ6B,QAAQe,QAAQ,gDACxB5C,EAAQ6B,QAAQe,QAAQ,uDACxB5C,EAAQ6B,QAAQe,QAAQ,2CACxB5C,EAAQ6B,QAAQe,QAAQ,+CACxB,MACJ,IAAK,QACDhD,OAAO8C,KAAK,6BACZ1C,EAAQ6B,QAAQe,QAAQ,8CACxB,MACJ,IAAK,UACDhD,OAAO8C,KAAK,0BACZ1C,EAAQ6B,QAAQe,QAAQ,kDACxB,MACJ,IAAK,SACDhD,OAAO8C,KAAK,iCACZ1C,EAAQ6B,QAAQe,QAAQ,wCACxB,MACJ,IAAK,WACDhD,OAAO8C,KAAK,6CACZ1C,EAAQ6B,QAAQe,QAAQ,0CACxB,MACJ,IAAK,SAEGxB,EADU,SAAVD,EACS,QAEA,QAEbT,EAAc,SAAAe,GAAO,OAAIA,EAAU,IACnC,MACJ,QACIzB,EAAQ6B,QAAQe,QAAO,uBAAAa,OAAwBZ,OAK3D,OACIa,IAAAC,cAAA,OAAKC,IAAK9D,EAAaqC,MAhOL,CAClB0B,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,cCDLC,SAVO,WACpB,OACER,IAAAC,cAAA,OAAKQ,UAAU,OACbT,IAAAC,cAAA,QAAMQ,UAAU,eACdT,IAAAC,cAACtB,EAAQ,UCMF+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAA/C,EAAA,GAAAgD,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBhD,SAASiD,eAAe,SAErBC,OACHzB,IAAAC,cAACD,IAAM0B,WAAU,KACf1B,IAAAC,cAACO,EAAG,QAORE","file":"static/js/main.111f3672.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Terminal } from 'xterm';\nimport { WebLinksAddon } from 'xterm-addon-web-links';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconst TerminalComponent: React.FC = () => {\n    const isMobile = (): boolean => window.innerWidth <= 768;\n\n    const terminalStyle = {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    };\n\n    const terminalRef = useRef<HTMLDivElement>(null);\n    const termRef = useRef<Terminal | null>(null);\n    const webLinksAddon = new WebLinksAddon();\n    const fitAddon = new FitAddon();\n\n    const [refreshKey, setRefreshKey] = useState<number>(0);\n    const DARK_THEME = {\n        background: '#0c1117',\n        foreground: '#fbdb5c',\n    };\n    \n    const LIGHT_THEME = {\n        background: '#fbdb5c',\n        foreground: '#0c1117',\n    };    \n    const getUserPreferredTheme = (): string => {\n        return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    };\n    const [theme, setTheme] = useState(getUserPreferredTheme());\n    \n    useEffect(() => {\n        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n        const handleChange = (e: MediaQueryListEvent) => {\n            setTheme(e.matches ? 'dark' : 'light');\n            setRefreshKey(prevKey => prevKey + 1);\n        };\n    \n        mediaQuery.addEventListener('change', handleChange);\n    \n        return () => {\n            mediaQuery.removeEventListener('change', handleChange);\n        };\n    }, []);\n        \n    const printPrompt = () => {\n        if (termRef.current) {\n            termRef.current.write(' > ');\n        }\n    };\n\n    const colorize = (text: string, color: string): string => {\n        const colors: Record<string, string> = {\n            red: '\\x1b[31m',\n            green: '\\x1b[32m',\n            yellow: '\\x1b[33m',\n            blue: '\\x1b[34m',\n            magenta: '\\x1b[35m',\n            cyan: '\\x1b[36m',\n            white: '\\x1b[37m',\n            gray: '\\x1b[90m',\n            bold: '\\x1b[1m',\n            reset: '\\x1b[0m',\n        };\n    \n        return `${colors[color] || ''}${text}${colors.reset}`;\n    };\n    // usage example: termRef.current.writeln(colorize(\"Welcome to Sahaj's terminal portfolio!\", 'red'));\n\n    const formatText = (text: string, color: string, isBold: boolean): string => {\n        const colors: Record<string, string> = {\n            red: '\\x1b[31m',\n            green: '\\x1b[32m',\n            yellow: '\\x1b[33m',\n            blue: '\\x1b[34m',\n            magenta: '\\x1b[35m',\n            cyan: '\\x1b[36m',\n            white: '\\x1b[37m',\n            gray: '\\x1b[90m',\n            bold: '\\x1b[1m',\n            reset: '\\x1b[0m',\n        };\n\n        const bold = isBold ? '\\x1b[1m' : '';\n        const chosenColor = colors[color] || '';\n        \n        return `${bold}${chosenColor}${text}\\x1b[0m`;\n    };\n    // usage example: termRef.current.writeln(`${formatText(\"Welcome\", \"red\", true)} to Sahaj's terminal portfolio!`);\n\n    useEffect(() => {\n        const currentTheme = theme === 'dark' ? DARK_THEME : LIGHT_THEME;\n        const newBackgroundColor = currentTheme.background;\n        document.documentElement.style.setProperty('--background-color', newBackgroundColor);\n        termRef.current = new Terminal({\n            cursorBlink: true,\n            fontSize: isMobile() ? 12 : 16,\n            fontFamily: 'FontAwesome, monospace',\n            theme: currentTheme,\n        });\n\n        if (terminalRef.current && termRef.current) {\n            termRef.current.loadAddon(webLinksAddon);\n            termRef.current.loadAddon(fitAddon);\n            termRef.current.open(terminalRef.current);\n            fitAddon.fit();\n\n            if (!isMobile()) {\n                termRef.current.writeln('');\n                termRef.current.writeln(\"   ███████╗ █████╗ ██╗  ██╗ █████╗      ██╗    ███████╗██╗███╗   ██╗ ██████╗ ██╗  ██╗\");\n                termRef.current.writeln(\"   ██╔════╝██╔══██╗██║  ██║██╔══██╗     ██║    ██╔════╝██║████╗  ██║██╔════╝ ██║  ██║\");\n                termRef.current.writeln(\"   ███████╗███████║███████║███████║     ██║    ███████╗██║██╔██╗ ██║██║  ███╗███████║\");\n                termRef.current.writeln(\"   ╚════██║██╔══██║██╔══██║██╔══██║██   ██║    ╚════██║██║██║╚██╗██║██║   ██║██╔══██║\");\n                termRef.current.writeln(\"   ███████║██║  ██║██║  ██║██║  ██║╚█████╔╝    ███████║██║██║ ╚████║╚██████╔╝██║  ██║\");\n                termRef.current.writeln(\"   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝     ╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝\");\n                termRef.current.writeln('');\n                termRef.current.writeln(' If ascii art is not displaying properly, please rotate horizontally or widen the window!');\n                termRef.current.writeln('');\n            }\n            termRef.current.writeln(\" Welcome to Sahaj's terminal portfolio!\");\n            termRef.current.writeln(' Type \"help\" to see available commands.');\n            printPrompt();\n\n            let cmd = '';\n            const onDataHandler = termRef.current.onData((data) => {\n                //if enter is pressed, handle the command\n                if (data === '\\r') {\n                    termRef.current!.writeln('');\n                    handleCommand(cmd.trim());\n                    cmd = '';\n                    printPrompt();\n                } else if (data === '\\x7f') { // if backspace is pressed, remove the last character from the command\n                    //only remove the last character if the command is not empty\n                    if (cmd.length > 0) {\n                        cmd = cmd.slice(0, -1);\n                        termRef.current!.write('\\b \\b');\n                    }\n                } else {\n                    termRef.current!.write(data);\n                    cmd += data;\n                }\n            });  \n            \n            const onResize = () => {\n                if (termRef.current) {\n                    fitAddon.fit(); // Resize the terminal to fit the new window dimensions\n                }\n            };\n\n            // Add event listener for window resize\n            window.addEventListener('resize', onResize);\n\n            // Cleanup on unmount\n            return () => {\n                window.removeEventListener('resize', onResize);\n                onDataHandler.dispose();\n                termRef.current!.dispose();\n            };\n        }\n    }, [refreshKey]);\n\n    const handleCommand = (cmd: string) => {\n        if (!termRef.current) return;\n\n        if (cmd === 'clear') {\n            termRef.current.clear();\n            termRef.current.reset();\n            termRef.current.writeln(' Welcome to my terminal portfolio!');\n            termRef.current.writeln(' Type \"help\" to see available commands.');\n            return;\n        }\n\n        switch (cmd) {\n            case 'help':\n                termRef.current.writeln(' Available commands are as follows:');\n                termRef.current.writeln(' \\uf2b5  Type \"about\" to learn more about me');\n                termRef.current.writeln(' \\uf07b  Type \"projects\" to view my projects');\n                termRef.current.writeln(' \\uf095  Type \"contact\" to view my contact information');\n                termRef.current.writeln(' \\uf0e2  Type \"clear\" to clear the terminal');\n                termRef.current.writeln(' \\uf186  Type \"toggle\" to toggle between light and dark mode');\n                break;\n            case 'about':\n                termRef.current.writeln(\" I'm a 4th-year Simon Fraser University student pursuing a Computer Engineering degree with a minor in Computing Sciences. Passionate about coding, I specialize in C and Python. I began self-learning programming in middle school and continued to develop my skills through my degree. Check out my GitHub for projects and my journey on sahajs.com 🌐.\");\n                break;\n            case 'projects':\n                termRef.current.writeln(' 1. Project A: A brief description...');\n                termRef.current.writeln(' 2. Project B: Another description...');\n                // List out your projects\n                break;\n            case 'contact':\n                termRef.current.writeln(' \\uf1fa Type \"email\" to contact me via Email');\n                termRef.current.writeln(' \\uf0ac Type \"website\" to visit my Personal Website');\n                termRef.current.writeln(' \\uf09b Type \"github\" to view my GitHub');\n                termRef.current.writeln(' \\uf08c Type \"linkedin\" to view my LinkedIn');\n                break;\n            case 'email':\n                window.open(\"mailto:sahaj_singh@sfu.ca\");\n                termRef.current.writeln(' Attempting to open \\uf1fa email client...');\n                break;\n            case 'website':\n                window.open(\"https://www.sahajs.com\");\n                termRef.current.writeln(' Attempting to open \\uf0ac personal website...');\n                break;\n            case 'github':\n                window.open(\"https://github.com/SatireSage\");\n                termRef.current.writeln(' Attempting to open \\uf09b GitHub...');\n                break;\n            case 'linkedin':\n                window.open(\"https://www.linkedin.com/in/sahaj--singh/\");\n                termRef.current.writeln(' Attempting to open \\uf08c LinkedIn...');\n                break;\n            case 'toggle':\n                if (theme === 'dark') {\n                    setTheme('light');\n                } else {\n                    setTheme('dark');\n                }\n                setRefreshKey(prevKey => prevKey + 1);\n                break;                \n            default:\n                termRef.current.writeln(` Command not found: ${cmd}`);\n                break;\n        }\n    };\n\n    return (\n        <div ref={terminalRef} style={terminalStyle}></div>\n    );\n};\n\nexport default TerminalComponent;\n","import React from 'react';\nimport Terminal from './components/Terminal';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <main className=\"App-content\">\n        <Terminal />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}